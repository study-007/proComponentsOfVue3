"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const N=require("./node.js"),C=require("./util.js"),l=require("../../../../../../../../registry.npmmirror.com_@vue_shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js");class y{constructor(e){this.currentNode=null,this.currentNodeKey=null;for(const t in e)l.hasOwn(e,t)&&(this[t]=e[t]);this.nodesMap={}}initialize(){if(this.root=new N.default({data:this.data,store:this}),this.root.initialize(),this.lazy&&this.load){const e=this.load;e(this.root,t=>{this.root.doCreateChildren(t),this._initDefaultCheckedNodes()})}else this._initDefaultCheckedNodes()}filter(e){const t=this.filterNodeMethod,s=this.lazy,o=function(i){const d=i.root?i.root.childNodes:i.childNodes;if(d.forEach(r=>{r.visible=t.call(r,e,r.data,r),o(r)}),!i.visible&&d.length){let r=!0;r=!d.some(c=>c.visible),i.root?i.root.visible=r===!1:i.visible=r===!1}e&&i.visible&&!i.isLeaf&&!s&&i.expand()};o(this)}setData(e){e!==this.root.data?(this.root.setData(e),this._initDefaultCheckedNodes()):this.root.updateChildren()}getNode(e){if(e instanceof N.default)return e;const t=l.isObject(e)?C.getNodeKey(this.key,e):e;return this.nodesMap[t]||null}insertBefore(e,t){const s=this.getNode(t);s.parent.insertBefore({data:e},s)}insertAfter(e,t){const s=this.getNode(t);s.parent.insertAfter({data:e},s)}remove(e){const t=this.getNode(e);t&&t.parent&&(t===this.currentNode&&(this.currentNode=null),t.parent.removeChild(t))}append(e,t){const s=t?this.getNode(t):this.root;s&&s.insertChild({data:e})}_initDefaultCheckedNodes(){const e=this.defaultCheckedKeys||[],t=this.nodesMap;e.forEach(s=>{const o=t[s];o&&o.setChecked(!0,!this.checkStrictly)})}_initDefaultCheckedNode(e){(this.defaultCheckedKeys||[]).includes(e.key)&&e.setChecked(!0,!this.checkStrictly)}setDefaultCheckedKey(e){e!==this.defaultCheckedKeys&&(this.defaultCheckedKeys=e,this._initDefaultCheckedNodes())}registerNode(e){const t=this.key;!e||!e.data||(t?e.key!==void 0&&(this.nodesMap[e.key]=e):this.nodesMap[e.id]=e)}deregisterNode(e){!this.key||!e||!e.data||(e.childNodes.forEach(s=>{this.deregisterNode(s)}),delete this.nodesMap[e.key])}getCheckedNodes(e=!1,t=!1){const s=[],o=function(i){(i.root?i.root.childNodes:i.childNodes).forEach(r=>{(r.checked||t&&r.indeterminate)&&(!e||e&&r.isLeaf)&&s.push(r.data),o(r)})};return o(this),s}getCheckedKeys(e=!1){return this.getCheckedNodes(e).map(t=>(t||{})[this.key])}getHalfCheckedNodes(){const e=[],t=function(s){(s.root?s.root.childNodes:s.childNodes).forEach(i=>{i.indeterminate&&e.push(i.data),t(i)})};return t(this),e}getHalfCheckedKeys(){return this.getHalfCheckedNodes().map(e=>(e||{})[this.key])}_getAllNodes(){const e=[],t=this.nodesMap;for(const s in t)l.hasOwn(t,s)&&e.push(t[s]);return e}updateChildren(e,t){const s=this.nodesMap[e];if(!s)return;const o=s.childNodes;for(let i=o.length-1;i>=0;i--){const d=o[i];this.remove(d.data)}for(let i=0,d=t.length;i<d;i++){const r=t[i];this.append(r,s.data)}}_setCheckedKeys(e,t=!1,s){const o=this._getAllNodes().sort((r,c)=>c.level-r.level),i=Object.create(null),d=Object.keys(s);o.forEach(r=>r.setChecked(!1,!1));for(let r=0,c=o.length;r<c;r++){const n=o[r],f=n.data[e].toString();if(!d.includes(f)){n.checked&&!i[f]&&n.setChecked(!1,!1);continue}let h=n.parent;for(;h&&h.level>0;)i[h.data[e]]=!0,h=h.parent;if(n.isLeaf||this.checkStrictly){n.setChecked(!0,!1);continue}if(n.setChecked(!0,!0),t){n.setChecked(!1,!1);const u=function(k){k.childNodes.forEach(a=>{a.isLeaf||a.setChecked(!1,!1),u(a)})};u(n)}}}setCheckedNodes(e,t=!1){const s=this.key,o={};e.forEach(i=>{o[(i||{})[s]]=!0}),this._setCheckedKeys(s,t,o)}setCheckedKeys(e,t=!1){this.defaultCheckedKeys=e;const s=this.key,o={};e.forEach(i=>{o[i]=!0}),this._setCheckedKeys(s,t,o)}setDefaultExpandedKeys(e){e=e||[],this.defaultExpandedKeys=e,e.forEach(t=>{const s=this.getNode(t);s&&s.expand(null,this.autoExpandParent)})}setChecked(e,t,s){const o=this.getNode(e);o&&o.setChecked(!!t,s)}getCurrentNode(){return this.currentNode}setCurrentNode(e){const t=this.currentNode;t&&(t.isCurrent=!1),this.currentNode=e,this.currentNode.isCurrent=!0}setUserCurrentNode(e,t=!0){const s=e[this.key],o=this.nodesMap[s];this.setCurrentNode(o),t&&this.currentNode.level>1&&this.currentNode.parent.expand(null,!0)}setCurrentNodeKey(e,t=!0){if(e==null){this.currentNode&&(this.currentNode.isCurrent=!1),this.currentNode=null;return}const s=this.getNode(e);s&&(this.setCurrentNode(s),t&&this.currentNode.level>1&&this.currentNode.parent.expand(null,!0))}}exports.default=y;
