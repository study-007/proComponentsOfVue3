"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const n=require("vue"),I=require("./model/tree-store.js"),i=require("./model/util.js"),O=require("./tree-node.js"),V=require("./model/useNodeExpandEventBroadcast.js"),j=require("./model/useDragNode.js"),L=require("./model/useKeydown.js"),R=require("../../../_virtual/plugin-vue_export-helper.js"),U=require("../../../utils/vue/icon.js"),G=require("../../../hooks/use-locale/index.js"),J=require("../../../hooks/use-namespace/index.js"),Q=require("../../form/src/constants.js"),W=n.defineComponent({name:"ElTree",components:{ElTreeNode:O.default},props:{data:{type:Array,default:()=>[]},emptyText:{type:String},renderAfterExpand:{type:Boolean,default:!0},nodeKey:String,checkStrictly:Boolean,defaultExpandAll:Boolean,expandOnClickNode:{type:Boolean,default:!0},checkOnClickNode:Boolean,checkDescendants:{type:Boolean,default:!1},autoExpandParent:{type:Boolean,default:!0},defaultCheckedKeys:Array,defaultExpandedKeys:Array,currentNodeKey:[String,Number],renderContent:Function,showCheckbox:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},allowDrag:Function,allowDrop:Function,props:{type:Object,default:()=>({children:"children",label:"label",disabled:"disabled"})},lazy:{type:Boolean,default:!1},highlightCurrent:Boolean,load:Function,filterNodeMethod:Function,accordion:Boolean,indent:{type:Number,default:18},icon:{type:U.iconPropType}},emits:["check-change","current-change","node-click","node-contextmenu","node-collapse","node-expand","check","node-drag-start","node-drag-end","node-drop","node-drag-leave","node-drag-enter","node-drag-over"],setup(e,a){const{t:h}=G.useLocale(),y=J.useNamespace("tree"),r=n.ref(new I.default({key:e.nodeKey,data:e.data,lazy:e.lazy,props:e.props,load:e.load,currentNodeKey:e.currentNodeKey,checkStrictly:e.checkStrictly,checkDescendants:e.checkDescendants,defaultCheckedKeys:e.defaultCheckedKeys,defaultExpandedKeys:e.defaultExpandedKeys,autoExpandParent:e.autoExpandParent,defaultExpandAll:e.defaultExpandAll,filterNodeMethod:e.filterNodeMethod}));r.value.initialize();const s=n.ref(r.value.root),c=n.ref(null),d=n.ref(null),f=n.ref(null),{broadcastExpanded:C}=V.useNodeExpandEventBroadcast(e),{dragState:N}=j.useDragNodeHandler({props:e,ctx:a,el$:d,dropIndicator$:f,store:r});L.useKeydown({el$:d},r);const K=n.computed(()=>{const{childNodes:t}=s.value;return!t||t.length===0||t.every(({visible:o})=>!o)});n.watch(()=>e.currentNodeKey,t=>{r.value.setCurrentNodeKey(t)}),n.watch(()=>e.defaultCheckedKeys,t=>{r.value.setDefaultCheckedKey(t)}),n.watch(()=>e.defaultExpandedKeys,t=>{r.value.setDefaultExpandedKeys(t)}),n.watch(()=>e.data,t=>{r.value.setData(t)},{deep:!0}),n.watch(()=>e.checkStrictly,t=>{r.value.checkStrictly=t});const k=t=>{if(!e.filterNodeMethod)throw new Error("[Tree] filterNodeMethod is required when filter");r.value.filter(t)},p=t=>i.getNodeKey(e.nodeKey,t.data),v=t=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in getNodePath");const o=r.value.getNode(t);if(!o)return[];const l=[o.data];let u=o.parent;for(;u&&u!==s.value;)l.push(u.data),u=u.parent;return l.reverse()},m=(t,o)=>r.value.getCheckedNodes(t,o),E=t=>r.value.getCheckedKeys(t),g=()=>{const t=r.value.getCurrentNode();return t?t.data:null},w=()=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in getCurrentKey");const t=g();return t?t[e.nodeKey]:null},B=(t,o)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedNodes");r.value.setCheckedNodes(t,o)},q=(t,o)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedKeys");r.value.setCheckedKeys(t,o)},S=(t,o,l)=>{r.value.setChecked(t,o,l)},T=()=>r.value.getHalfCheckedNodes(),b=()=>r.value.getHalfCheckedKeys(),D=(t,o=!0)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentNode");i.handleCurrentChange(r,a.emit,()=>r.value.setUserCurrentNode(t,o))},$=(t,o=!0)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentKey");i.handleCurrentChange(r,a.emit,()=>r.value.setCurrentNodeKey(t,o))},x=t=>r.value.getNode(t),A=t=>{r.value.remove(t)},z=(t,o)=>{r.value.append(t,o)},M=(t,o)=>{r.value.insertBefore(t,o)},P=(t,o)=>{r.value.insertAfter(t,o)},F=(t,o,l)=>{C(o),a.emit("node-expand",t,o,l)},H=(t,o)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in updateKeyChild");r.value.updateChildren(t,o)};return n.provide("RootTree",{ctx:a,props:e,store:r,root:s,currentNode:c,instance:n.getCurrentInstance()}),n.provide(Q.formItemContextKey,void 0),{ns:y,store:r,root:s,currentNode:c,dragState:N,el$:d,dropIndicator$:f,isEmpty:K,filter:k,getNodeKey:p,getNodePath:v,getCheckedNodes:m,getCheckedKeys:E,getCurrentNode:g,getCurrentKey:w,setCheckedNodes:B,setCheckedKeys:q,setChecked:S,getHalfCheckedNodes:T,getHalfCheckedKeys:b,setCurrentNode:D,setCurrentKey:$,t:h,getNode:x,remove:A,append:z,insertBefore:M,insertAfter:P,handleNodeExpand:F,updateKeyChildren:H}}});function X(e,a,h,y,r,s){const c=n.resolveComponent("el-tree-node");return n.openBlock(),n.createElementBlock("div",{ref:"el$",class:n.normalizeClass([e.ns.b(),e.ns.is("dragging",!!e.dragState.draggingNode),e.ns.is("drop-not-allow",!e.dragState.allowDrop),e.ns.is("drop-inner",e.dragState.dropType==="inner"),{[e.ns.m("highlight-current")]:e.highlightCurrent}]),role:"tree"},[(n.openBlock(!0),n.createElementBlock(n.Fragment,null,n.renderList(e.root.childNodes,d=>(n.openBlock(),n.createBlock(c,{key:e.getNodeKey(d),node:d,props:e.props,accordion:e.accordion,"render-after-expand":e.renderAfterExpand,"show-checkbox":e.showCheckbox,"render-content":e.renderContent,onNodeExpand:e.handleNodeExpand},null,8,["node","props","accordion","render-after-expand","show-checkbox","render-content","onNodeExpand"]))),128)),e.isEmpty?(n.openBlock(),n.createElementBlock("div",{key:0,class:n.normalizeClass(e.ns.e("empty-block"))},[n.renderSlot(e.$slots,"empty",{},()=>{var d;return[n.createElementVNode("span",{class:n.normalizeClass(e.ns.e("empty-text"))},n.toDisplayString((d=e.emptyText)!=null?d:e.t("el.tree.emptyText")),3)]})],2)):n.createCommentVNode("v-if",!0),n.withDirectives(n.createElementVNode("div",{ref:"dropIndicator$",class:n.normalizeClass(e.ns.e("drop-indicator"))},null,2),[[n.vShow,e.dragState.showDropIndicator]])],2)}var Y=R.default(W,[["render",X],["__file","/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree.vue"]]);exports.default=Y;
