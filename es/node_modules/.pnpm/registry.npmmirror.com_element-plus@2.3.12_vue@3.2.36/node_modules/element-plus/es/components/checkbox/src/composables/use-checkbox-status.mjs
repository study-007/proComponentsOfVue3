import { inject as v, ref as d, computed as t, toRaw as l } from "vue";
import { checkboxGroupContextKey as h } from "../constants.mjs";
import { isBoolean as x } from "../../../../utils/types.mjs";
import { isArray as k, isObject as p } from "../../../../../../../../registry.npmmirror.com_@vue_shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.mjs";
import { useFormSize as u } from "../../../form/src/hooks/use-form-common-props.mjs";
import z from "../../../../../../../../registry.npmmirror.com_lodash-es@4.17.21/node_modules/lodash-es/isEqual.mjs";
const F = (o, i, { model: n }) => {
  const r = v(h, void 0), a = d(!1), s = t(() => {
    const e = n.value;
    return x(e) ? e : k(e) ? p(o.label) ? e.map(l).some((b) => z(b, o.label)) : e.map(l).includes(o.label) : e != null ? e === o.trueLabel : !!e;
  }), c = u(t(() => {
    var e;
    return (e = r == null ? void 0 : r.size) == null ? void 0 : e.value;
  }), {
    prop: !0
  }), m = u(t(() => {
    var e;
    return (e = r == null ? void 0 : r.size) == null ? void 0 : e.value;
  })), f = t(() => !!(i.default || o.label));
  return {
    checkboxButtonSize: c,
    isChecked: s,
    isFocused: a,
    checkboxSize: m,
    hasOwnLabel: f
  };
};
export {
  F as useCheckboxStatus
};
