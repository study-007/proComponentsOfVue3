import { defineComponent as t, computed as m, openBlock as p, createElementBlock as l, mergeProps as f, unref as r, renderSlot as a } from "vue";
import { iconProps as u } from "./icon.mjs";
import d from "../../../_virtual/plugin-vue_export-helper.mjs";
import { useNamespace as _ } from "../../../hooks/use-namespace/index.mjs";
import { isUndefined as k } from "../../../utils/types.mjs";
import { addUnit as h } from "../../../utils/dom/style.mjs";
const v = t({
  name: "ElIcon",
  inheritAttrs: !1
}), g = /* @__PURE__ */ t({
  ...v,
  props: u,
  setup(n) {
    const s = n, c = _("icon"), i = m(() => {
      const { size: e, color: o } = s;
      return !e && !o ? {} : {
        fontSize: k(e) ? void 0 : h(e),
        "--color": o
      };
    });
    return (e, o) => (p(), l("i", f({
      class: r(c).b(),
      style: r(i)
    }, e.$attrs), [
      a(e.$slots, "default")
    ], 16));
  }
});
var S = /* @__PURE__ */ d(g, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/icon/src/icon.vue"]]);
export {
  S as default
};
