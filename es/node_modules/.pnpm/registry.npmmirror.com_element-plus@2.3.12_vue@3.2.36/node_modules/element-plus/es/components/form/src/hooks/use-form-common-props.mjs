import { ref as v, inject as i, computed as m, unref as l } from "vue";
import { formContextKey as d, formItemContextKey as a } from "../constants.mjs";
import { useProp as f } from "../../../../hooks/use-prop/index.mjs";
import { useGlobalSize as c } from "../../../../hooks/use-size/index.mjs";
const y = (t, o = {}) => {
  const e = v(void 0), n = o.prop ? e : f("size"), u = o.global ? e : c(), s = o.form ? { size: void 0 } : i(d, void 0), r = o.formItem ? { size: void 0 } : i(a, void 0);
  return m(() => n.value || l(t) || (r == null ? void 0 : r.size) || (s == null ? void 0 : s.size) || u.value || "");
}, C = (t) => {
  const o = f("disabled"), e = i(d, void 0);
  return m(() => o.value || l(t) || (e == null ? void 0 : e.disabled) || !1);
};
export {
  C as useFormDisabled,
  y as useFormSize
};
