import { defineComponent as l, inject as r, h as s } from "vue";
import m from "../../../_virtual/plugin-vue_export-helper.mjs";
import { useNamespace as u } from "../../../hooks/use-namespace/index.mjs";
const p = l({
  name: "ElTreeNodeContent",
  props: {
    node: {
      type: Object,
      required: !0
    },
    renderContent: Function
  },
  setup(t) {
    const c = u("tree"), a = r("NodeInstance"), n = r("RootTree");
    return () => {
      const e = t.node, { data: o, store: d } = e;
      return t.renderContent ? t.renderContent(s, { _self: a, node: e, data: o, store: d }) : n.ctx.slots.default ? n.ctx.slots.default({ node: e, data: o }) : s("span", { class: c.be("node", "label") }, [e.label]);
    };
  }
});
var C = /* @__PURE__ */ m(p, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue"]]);
export {
  C as default
};
