import { useSizeProp as i } from "../../../hooks/use-size/index.mjs";
import { UPDATE_MODEL_EVENT as n } from "../../../constants/event.mjs";
import { isString as o } from "../../../../../../../registry.npmmirror.com_@vue_shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.mjs";
import { isNumber as t, isBoolean as r } from "../../../utils/types.mjs";
const u = {
  modelValue: {
    type: [Number, String, Boolean],
    default: void 0
  },
  label: {
    type: [String, Boolean, Number, Object]
  },
  indeterminate: Boolean,
  disabled: Boolean,
  checked: Boolean,
  name: {
    type: String,
    default: void 0
  },
  trueLabel: {
    type: [String, Number],
    default: void 0
  },
  falseLabel: {
    type: [String, Number],
    default: void 0
  },
  id: {
    type: String,
    default: void 0
  },
  controls: {
    type: String,
    default: void 0
  },
  border: Boolean,
  size: i,
  tabindex: [String, Number],
  validateEvent: {
    type: Boolean,
    default: !0
  }
}, b = {
  [n]: (e) => o(e) || t(e) || r(e),
  change: (e) => o(e) || t(e) || r(e)
};
export {
  b as checkboxEmits,
  u as checkboxProps
};
