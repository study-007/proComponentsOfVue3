import { defineComponent as B, useSlots as N, computed as f, openBlock as r, createBlock as S, resolveDynamicComponent as z, unref as n, normalizeClass as s, withCtx as I, createElementVNode as c, withDirectives as C, createElementBlock as m, isRef as h, withModifiers as y, vModelCheckbox as g, renderSlot as K, Fragment as M, createTextVNode as R, toDisplayString as U, createCommentVNode as x } from "vue";
import { checkboxProps as O, checkboxEmits as P } from "./checkbox.mjs";
import T from "../../../_virtual/plugin-vue_export-helper.mjs";
import { useCheckbox as j } from "./composables/use-checkbox.mjs";
import { useNamespace as q } from "../../../hooks/use-namespace/index.mjs";
const A = ["tabindex", "role", "aria-checked"], G = ["id", "aria-hidden", "name", "tabindex", "disabled", "true-value", "false-value"], H = ["id", "aria-hidden", "disabled", "value", "name", "tabindex"], J = B({
  name: "ElCheckbox"
}), Q = /* @__PURE__ */ B({
  ...J,
  props: O,
  emits: P,
  setup(L) {
    const b = L, $ = N(), {
      inputId: p,
      isLabeledByFormItem: w,
      isChecked: k,
      isDisabled: d,
      isFocused: t,
      checkboxSize: F,
      hasOwnLabel: v,
      model: i,
      handleChange: u,
      onClickRoot: V
    } = j(b, $), o = q("checkbox"), D = f(() => [
      o.b(),
      o.m(F.value),
      o.is("disabled", d.value),
      o.is("bordered", b.border),
      o.is("checked", k.value)
    ]), E = f(() => [
      o.e("input"),
      o.is("disabled", d.value),
      o.is("checked", k.value),
      o.is("indeterminate", b.indeterminate),
      o.is("focus", t.value)
    ]);
    return (l, e) => (r(), S(z(!n(v) && n(w) ? "span" : "label"), {
      class: s(n(D)),
      "aria-controls": l.indeterminate ? l.controls : null,
      onClick: n(V)
    }, {
      default: I(() => [
        c("span", {
          class: s(n(E)),
          tabindex: l.indeterminate ? 0 : void 0,
          role: l.indeterminate ? "checkbox" : void 0,
          "aria-checked": l.indeterminate ? "mixed" : void 0
        }, [
          l.trueLabel || l.falseLabel ? C((r(), m("input", {
            key: 0,
            id: n(p),
            "onUpdate:modelValue": e[0] || (e[0] = (a) => h(i) ? i.value = a : null),
            class: s(n(o).e("original")),
            type: "checkbox",
            "aria-hidden": l.indeterminate ? "true" : "false",
            name: l.name,
            tabindex: l.tabindex,
            disabled: n(d),
            "true-value": l.trueLabel,
            "false-value": l.falseLabel,
            onChange: e[1] || (e[1] = (...a) => n(u) && n(u)(...a)),
            onFocus: e[2] || (e[2] = (a) => t.value = !0),
            onBlur: e[3] || (e[3] = (a) => t.value = !1),
            onClick: e[4] || (e[4] = y(() => {
            }, ["stop"]))
          }, null, 42, G)), [
            [g, n(i)]
          ]) : C((r(), m("input", {
            key: 1,
            id: n(p),
            "onUpdate:modelValue": e[5] || (e[5] = (a) => h(i) ? i.value = a : null),
            class: s(n(o).e("original")),
            type: "checkbox",
            "aria-hidden": l.indeterminate ? "true" : "false",
            disabled: n(d),
            value: l.label,
            name: l.name,
            tabindex: l.tabindex,
            onChange: e[6] || (e[6] = (...a) => n(u) && n(u)(...a)),
            onFocus: e[7] || (e[7] = (a) => t.value = !0),
            onBlur: e[8] || (e[8] = (a) => t.value = !1),
            onClick: e[9] || (e[9] = y(() => {
            }, ["stop"]))
          }, null, 42, H)), [
            [g, n(i)]
          ]),
          c("span", {
            class: s(n(o).e("inner"))
          }, null, 2)
        ], 10, A),
        n(v) ? (r(), m("span", {
          key: 0,
          class: s(n(o).e("label"))
        }, [
          K(l.$slots, "default"),
          l.$slots.default ? x("v-if", !0) : (r(), m(M, { key: 0 }, [
            R(U(l.label), 1)
          ], 64))
        ], 2)) : x("v-if", !0)
      ]),
      _: 3
    }, 8, ["class", "aria-controls", "onClick"]));
  }
});
var ee = /* @__PURE__ */ T(Q, [["__file", "/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox.vue"]]);
export {
  ee as default
};
