import { inject as v, computed as r } from "vue";
import { checkboxGroupContextKey as d } from "../constants.mjs";
import { isUndefined as s } from "../../../../utils/types.mjs";
import { useFormDisabled as m } from "../../../form/src/hooks/use-form-common-props.mjs";
const D = ({
  model: e,
  isChecked: i
}) => {
  const o = v(d, void 0), l = r(() => {
    var n, t;
    const u = (n = o == null ? void 0 : o.max) == null ? void 0 : n.value, a = (t = o == null ? void 0 : o.min) == null ? void 0 : t.value;
    return !s(u) && e.value.length >= u && !i.value || !s(a) && e.value.length <= a && i.value;
  });
  return {
    isDisabled: m(r(() => (o == null ? void 0 : o.disabled.value) || l.value)),
    isLimitDisabled: l
  };
};
export {
  D as useCheckboxDisabled
};
